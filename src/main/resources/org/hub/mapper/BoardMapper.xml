<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hub.mapper.BoardMapper">

	<!-- 관심글 등록하기 -->
 	<insert id="insertInterest" parameterType="map">
		INSERT INTO interest_tbl (uidkey, bno)
		VALUES (#{uidkey}, #{bno})
	</insert>
	
	<!-- 관심글 삭제하기 -->
	<delete id="deleteInterest" parameterType="map">
		DELETE FROM interest_tbl
		WHERE uidkey = #{uidkey} AND bno = #{bno}
	</delete> 		

	<!-- 추천목록 가져오기 -->
	<select resultType="int" id="getRecommend">
		SELECT DISTINCT b.bno
		FROM boardstack_tbl b
		INNER JOIN userstack_tbl u
		ON b.sno = u.sno
		WHERE u.uidkey = #{uidkey}
	</select>

	<!-- 관심목록 가져오기 -->
	<select resultType="int" id="getInterest">
		SELECT * FROM BOARD_TBL WHERE bno IN
		(SELECT bno
		FROM INTEREST_TBL
		WHERE uidkey = #{uidkey})
	</select>

	<!-- 검색 기능 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<insert id="insert" parameterType="org.hub.domain.BoardVO">
		<selectKey keyProperty="bno" resultType="int" order="BEFORE">
			select
			bno_seq.nextval FROM dual
		</selectKey>

		insert into board_tbl (bno, meet, membernum, contact, period, title,
		uidkey, content, regdate, deadline,contactaddress)
		values (#{bno},#{meet}, #{memberNum}, #{contact}, #{period}, #{title},
		#{uidkey}, #{content}, sysdate, #{deadline},#{contactaddress})
	</insert>

	<!-- jsh 수정하기 -->
	<update id="update" parameterType="org.hub.domain.BoardVO">
		update  board_tbl
		set meet = #{meet}, membernum=#{memberNum}, contactaddress= #{contactaddress}, contact=#{contact}, period=#{period}, title=#{title}, content=#{content}, deadline=#{deadline}
		where bno = #{bno}
	</update>
	
	<!-- 상세보기 -->
	<select id="read" resultType="org.hub.domain.BoardVO">
	<![CDATA[
	SELECT bno, deadline,meet, memberNum,regdate, period, contact,contactaddress,content, status, uidkey ,title, uname, fnames, snames, cnt, replycnt, NVL(profileImage, 'profileLogo.png') AS profileImage
	FROM (select * from board_view_01)
	WHERE bno=#{bno}
	]]>
	</select>
	
	<!-- 버튼 클릭시 모집마감 -->
	<update id="updateClose">
		update board_tbl set status= 'closed'
		where bno =#{bno}
	</update>
	
	<!-- 마감 처리 취소 -->
	<update id="updateOpend">
		update board_tbl set status ='opened'
		where bno = #{bno}
	</update>

	<!-- 삭제 -->
	<delete id="delete">
		delete board_tbl where bno = #{bno}
	</delete>
	
	<!--  kdh 0421 댓글 조회수 -->
	<update id="updateViewCnt">
		update board_tbl
		set cnt = COALESCE(cnt, 0) +1
		where
		bno = #{bno}
	</update>
	
	<!-- jsh 0706 마감일자 지난 게시글의 status 값을 closed로 변경 -->
	<update id="updateBoardStatus">
	  <![CDATA[
	  	UPDATE board_tbl SET status = 'closed' WHERE TO_DATE(deadline, 'YY/MM/DD') < TRUNC(SYSDATE)
	  ]]>
	</update>
	
	<!-- jsh 0502 게시글 페이징처리 하면서 가져오기 -->
	<select id="getListWithPaging"
		resultType="org.hub.domain.BoardVO">
	<![CDATA[
	SELECT bno, regdate, deadline, status, uidkey ,title, uname, fnames, snames, cnt, replycnt, NVL(profileImage, 'profileLogo.png') AS profileImage
	FROM (select * from board_view 
	WHERE 
	]]>
		<include refid="criteria"></include>
	<![CDATA[
	 rownum <= #{pageNum} * #{amount}
	 )
	WHERE rn > (#{pageNum} - 1) * #{amount}
	]]>
		<!-- status 값이 true이면 '모집중 글만 보기 on'인 상태 -->
		<if test="status == true">
			AND status = 'opened'
		</if>
		<if test="status == false">
			AND status in ('opened','closed')
		</if>
		
	</select>
	
	<!-- jsh 0502 일반 메인 페이지 수 계산 -->
	<select id="getTotalCount" resultType="int">
		select count(*) from board_tbl
		where

		<include refid="criteria"></include>

		bno > 0
		<!-- status 값이 true이면 '모집중 글만 보기 on'인 상태 -->
		<if test="status == true">
			AND status = 'opened'
		</if>
		<if test="status == false">
			AND status in ('opened','closed')
		</if>
	</select>
	
	<!--  jsh 0502 게시글 페이징처리+필터 처리해서 가져오기 -->
	<select id="getListWithPagingWithFilter"
		resultType="org.hub.domain.BoardVO">
	   <![CDATA[
	SELECT bno, regdate, deadline, uidkey ,title, uname, fnames, snames, cnt, replycnt, NVL(profileImage, 'profileLogo.png') AS profileImage
	FROM (
		select * from board_view 
		WHERE
	]]>
		<include refid="criteria"></include>
	<![CDATA[
		 rownum <= #{pageNum} * #{amount}
	]]>
		<!-- status 값이 true이면 '모집중 글만 보기 on'인 상태 -->
		<if test="status == true">
			AND status = 'opened'
		</if>
		<if test="status == false">
			AND status in ('opened','closed')
		</if>
		
		)
	<![CDATA[
		WHERE rn > (#{pageNum} - 1) * #{amount}
	]]>
		
		<if test="position != null">
			AND fnames LIKE '%'||#{position}||'%'
		</if>
		
		<if test="filters != null and filters.length > 0">
			AND 
			<foreach collection="filters" item="filter" separator="or">
				snames LIKE '%'||#{filter}||'%'
			</foreach>
		</if>
	</select>
	
	<!-- jsh 0502 메인 with 필터 페이지 수 계산 -->
	<select id="getTotalCountWithFilter" resultType="int">
		select count(*) from board_view
		where

		<include refid="criteria"></include>
		
		<!-- status 값이 true이면 '모집중 글만 보기 on'인 상태 -->
		<if test="status == true">
			status = 'opened'
		</if>
		<if test="status == false">
			status in ('opened','closed')
		</if>
		
		<if test="filters != null and filters.length > 0">
			AND
			<foreach collection="filters" item="filter" separator="or">
				snames LIKE '%'||#{filter}||'%'
			</foreach>		
		</if>
		<if test="position != '' and position != null">
			AND fnames LIKE '%'||#{position}||'%'
		</if>
		


	</select>


	<update id="updateReplyCnt">
		update board_tbl set replycnt = replycnt + #{amount}
		where bno = #{bno}
	</update>

	<!-- 0422 YJ 사용자 작성 글 목록 -->
	<select id="getListUserWrite"
		resultType="org.hub.domain.BoardVO">
		SELECT bno, deadline, uidkey ,title, uname, fnames, snames, cnt, replycnt, NVL(profileImage, 'profileLogo.png') AS profileImage
		FROM (select * from board_view)
		where uidkey=#{uidkey}
	</select>

	<!-- 읽은 글 목록 -->
	<!-- 0426 YJ 읽은글 목록 조회 -->
	<select id="getUserRead" resultType="org.hub.domain.BoardVO">	
		select userread_tbl.bno, bv.deadline, bv.uidkey ,bv.title, bv.uname, bv.fnames, bv.snames, bv.cnt, bv.replycnt, NVL(profileImage, 'profileLogo.png') AS profileImage
		from (select * from board_view) bv left outer join userread_tbl
		on bv.bno = userread_tbl.bno
		where userread_tbl.uidkey=#{uidkey}
	</select>

	<!-- 0426 YJ 읽은글 목록 DB 등록 -->
	<insert id="saveUserRead" parameterType="org.hub.domain.UserReadVO">
		insert into userread_tbl (urno, uidkey, bno, readtime) 
		values (seq_userread.nextval, #{uidkey}, #{bno}, sysdate)
	</insert>
	
	<!-- 0502 읽은 글 중복검사 -->
  	<select id="bnoCheck" resultType="int">
  		select count(*) from userread_tbl where uidkey=#{uidkey} and bno=#{bno}
  	</select>

</mapper>